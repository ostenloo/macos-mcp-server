VoiceOverMenuWindowsMenu = 'wind' /* Windows menu */,
VoiceOverMenuApplicationsMenu = 'apps' /* Applications menu */,
VoiceOverMenuHelpMenu = 'help' /* Help menu */,
enum VoiceOverMenu {
typedef enum VoiceOverContainment VoiceOverContainment;
};
VoiceOverContainmentOutOfItem = 'outV' /* Interact out */
VoiceOverContainmentIntoItem = 'in V' /* Interact in */,
enum VoiceOverContainment {
typedef enum VoiceOverDirection VoiceOverDirection;
};
VoiceOverDirectionRight = 'rigV' /* Right */
VoiceOverDirectionLeft = 'lefV' /* Left */,
VoiceOverDirectionDown = 'dowV' /* Down */,
VoiceOverDirectionUp = 'up V' /* Up */,
enum VoiceOverDirection {
typedef enum VoiceOverPlace VoiceOverPlace;
};
VoiceOverPlaceLastItem = 'LasV' /* Last item */
VoiceOverPlaceFirstItem = 'FirV' /* First item */,
VoiceOverPlaceLinkedItem = 'linV' /* Linked item */,
VoiceOverPlaceSpotlight = 'spoV' /* Spotlight */,
VoiceOverPlaceStatusMenu = 'meeV' /* Status menu */,
VoiceOverPlaceMenubar = 'menV' /* The menubar */,
VoiceOverPlaceDesktop = 'desV' /* The desktop */,
VoiceOverPlaceDock = 'docV' /* The dock */,
enum VoiceOverPlace {
typedef enum VoiceOverClickButton VoiceOverClickButton;
};
VoiceOverClickButtonRightButton = 'righ' /* Right mouse button */
VoiceOverClickButtonLeftButton = 'left' /* Left mouse button */,
enum VoiceOverClickButton {
typedef enum VoiceOverClickCount VoiceOverClickCount;
};
VoiceOverClickCountThrice = 'thri' /* Triple mouse click */
VoiceOverClickCountTwice = 'twic' /* Double mouse click */,
VoiceOverClickCountOnce = 'once' /* One mouse click */,
enum VoiceOverClickCount {
VoiceOverLastPhraseObject, VoiceOverKeyboardCursorObject;
VoiceOverCaptionWindowObject, VoiceOverBrailleWindowObject, VoiceOverMouseCursorObject,
@class VoiceOverApplication, VoiceOverVoCursorObject, VoiceOverCommanderObject,
#import <ScriptingBridge/ScriptingBridge.h>
#import <AppKit/AppKit.h>
*/
/*
* VoiceOver.h

- (void) click:(VoiceOverClickCount)x with:(VoiceOverClickButton)with;
- (void) performCommand:(NSString *)x;
VoiceOver output
@property (copy, readonly) VoiceOverLastPhraseObject *lastPhrase; // The last phrase
Braille window
@property (copy, readonly) VoiceOverBrailleWindowObject *brailleWindow; // The VoiceOver
caption window
@property (copy, readonly) VoiceOverCaptionWindowObject *captionWindow; // The VoiceOver
keyboard cursor
@property (copy, readonly) VoiceOverKeyboardCursorObject *keyboardCursor; // The
@property (copy, readonly) VoiceOverMouseCursorObject *mouseCursor; // The mouse cursor
commander
@property (copy, readonly) VoiceOverCommanderObject *commander; // The VoiceOver
@property (copy, readonly) VoiceOverVoCursorObject *voCursor; // The VoiceOver cursor
@interface VoiceOverApplication : SBApplication
// VoiceOver
*/
/*
* VoiceOver Suite
typedef enum VoiceOverSpellingType VoiceOverSpellingType;
};
VoiceOverSpellingTypePhoneticSpelling = 'phoS' /* Phoenetic spelling */
VoiceOverSpellingTypeAlphabeticSpelling = 'alpS' /* Alphabetic spelling */,
enum VoiceOverSpellingType {
typedef enum VoiceOverOutputables VoiceOverOutputables;
};
announcement */
VoiceOverOutputablesAnnouncementHistory = 'annH' /* Causes the display to show recent
VoiceOverOutputablesWebOverview = 'webO' /* The overview of the web page */,
VoiceOverOutputablesWindowOverview = 'winO' /* The overview of the current window */,
environment */,
VoiceOverOutputablesWorkspaceOverview = 'worS' /* The overview of the working
VoiceOverOutputablesMouseSummary = 'mosU' /* Summary of the item under the mouse */,
enum VoiceOverOutputables {
typedef enum VoiceOverResource VoiceOverResource;
};
VoiceOverResourceVoiceOverHelp = 'vhel' /* Quickstart */
VoiceOverResourceQuickstart = 'quik' /* Quickstart */,
VoiceOverResourceUtility = 'util' /* VoiceOver Utility */,
enum VoiceOverResource {
typedef enum VoiceOverMenu VoiceOverMenu;
};
VoiceOverMenuContextualMenu = 'ctxm' /* Contextual menu */
VoiceOverMenuWebMenu = 'webm' /* Web menu */,
VoiceOverMenuItemChooser = 'item' /* Item chooser */,
VoiceOverMenuCommandsMenu = 'cmds' /* Commands menu */,

@end
- (void) release;
- (void) press;
@property NSPoint position; // Position of the mouse
@interface VoiceOverMouseCursorObject : SBObject
// The mouse cursor
@end
@property BOOL enabled; // The visibility of the Braille window
@interface VoiceOverBrailleWindowObject : SBObject
// The Braille window
@end
@property BOOL enabled; // The visibility of the caption window
@interface VoiceOverCaptionWindowObject : SBObject
// The caption window
@end
@interface VoiceOverCommanderObject : SBObject
// The VoiceOver commander.
@end
- (void) select;
- (void) performAction;
path to the file
- (NSString *) grabScreenshot; // Takes a screenshot of the VO cursor and returns the
@property double magnification; // The magnification factor of the VoiceOver cursor
VoiceOver cursor
@property (copy, readonly) NSString *textUnderCursor; // The text of the item in the
@property (readonly) NSRect bounds; // The bounds of the VoiceOver cursor
@interface VoiceOverVoCursorObject : SBObject
// The VoiceOver cursor
@end
- (void) closeMenu; // Closes open menus
- (void) open:(id)x;
- (void) outputWith:(VoiceOverSpellingType)with; // Output
- (void) moveTo:(VoiceOverPlace)to; // Move the vo cursor to a new location.
- (void) quit;

@end
keyboard cursor
@property (copy, readonly) NSString *textUnderCursor; // The text of the item in the
@property (readonly) NSRect bounds; // The bounds of the keyboard cursor
@interface VoiceOverKeyboardCursorObject : SBObject
// The keyboard cursor
@end
- (void) copyToPasteboard NS_RETURNS_NOT_RETAINED; // Copy last phrase to pasteboard
- (void) save; // Save last phrase
@property (copy, readonly) NSString *content; // The text of the last phrase
@interface VoiceOverLastPhraseObject : SBObject
// The last phrase outputted

