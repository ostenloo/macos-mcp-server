@property (readonly) BOOL frontmost; // Is this the active application?
@property (copy, readonly) NSString *name; // The name of the application.
- (SBElementArray<ShortcutsEventsWindow *> *) windows;
- (SBElementArray<ShortcutsEventsDocument *> *) documents;
@interface ShortcutsEventsApplication : SBApplication
// The application's top-level scripting object.
*/
/*
* Standard Suite
@end
- (void) moveTo:(SBObject *)to; // Move an object to a new location.
Copy an object.
- (void) duplicateTo:(SBObject *)to withProperties:(NSDictionary *)withProperties; //
- (void) delete; // Delete an object.
(BOOL)printDialog; // Print a document.
- (void) printWithProperties:(NSDictionary *)withProperties printDialog:
- (void) saveIn:(NSURL *)in_ as:(id)as; // Save a document.
Close a document.
- (void) closeSaving:(ShortcutsEventsSaveOptions)saving savingIn:(NSURL *)savingIn; //
@protocol ShortcutsEventsGenericMethods
typedef enum ShortcutsEventsPrintingErrorHandling ShortcutsEventsPrintingErrorHandling;
};
PostScript errors */
ShortcutsEventsPrintingErrorHandlingDetailed = 'lwdt' /* print a detailed report of
handling */,
ShortcutsEventsPrintingErrorHandlingStandard = 'lwst' /* Standard PostScript error
enum ShortcutsEventsPrintingErrorHandling {
typedef enum ShortcutsEventsSaveOptions ShortcutsEventsSaveOptions;
};
file. */
ShortcutsEventsSaveOptionsAsk = 'ask ' /* Ask the user whether or not to save the
ShortcutsEventsSaveOptionsNo = 'no ' /* Do not save the file. */,
ShortcutsEventsSaveOptionsYes = 'yes ' /* Save the file. */,
enum ShortcutsEventsSaveOptions {
ShortcutsEventsShortcut, ShortcutsEventsFolder;
@class ShortcutsEventsApplication, ShortcutsEventsDocument, ShortcutsEventsWindow,
#import <ScriptingBridge/ScriptingBridge.h>
#import <AppKit/AppKit.h>
*/
/*
* ShortcutsEvents.h

@interface ShortcutsEventsShortcut : SBObject <ShortcutsEventsGenericMethods>
// a shortcut in the Shortcuts application
@end
- (SBElementArray<ShortcutsEventsFolder *> *) folders;
- (SBElementArray<ShortcutsEventsShortcut *> *) shortcuts;
@interface ShortcutsEventsApplication (ShortcutsSuite)
*/
/*
* Shortcuts Suite
@end
contents are displayed in the window.
@property (copy, readonly) ShortcutsEventsDocument *document; // The document whose
@property BOOL zoomed; // Is the window zoomed right now?
@property (readonly) BOOL zoomable; // Does the window have a zoom button?
@property BOOL visible; // Is the window visible right now?
@property (readonly) BOOL resizable; // Can the window be resized?
@property BOOL miniaturized; // Is the window minimized right now?
@property (readonly) BOOL miniaturizable; // Does the window have a minimize button?
@property (readonly) BOOL closeable; // Does the window have a close button?
@property NSRect bounds; // The bounding rectangle of the window.
@property NSInteger index; // The index of the window, ordered front to back.
- (NSInteger) id; // The unique identifier of the window.
@property (copy, readonly) NSString *name; // The title of the window.
@interface ShortcutsEventsWindow : SBObject <ShortcutsEventsGenericMethods>
// A window.
@end
@property (copy, readonly) NSURL *file; // Its location on disk, if it has one.
@property (readonly) BOOL modified; // Has it been modified since the last save?
@property (copy, readonly) NSString *name; // Its name.
@interface ShortcutsEventsDocument : SBObject <ShortcutsEventsGenericMethods>
// A document.
@end
- (BOOL) exists:(id)x; // Verify that an object exists.
- (void) quitSaving:(ShortcutsEventsSaveOptions)saving; // Quit the application.
(BOOL)printDialog; // Print a document.
- (void) print:(id)x withProperties:(NSDictionary *)withProperties printDialog:
- (id) open:(id)x; // Open a document.
@property (copy, readonly) NSString *version; // The version number of the application.

@end
- (NSString *) id; // the unique identifier of the folder
@property (copy) NSString *name; // the name of the folder
- (SBElementArray<ShortcutsEventsShortcut *> *) shortcuts;
@interface ShortcutsEventsFolder : SBObject <ShortcutsEventsGenericMethods>
// a folder containing shortcuts
@end
'Shortcuts'.
background, without opening the Shortcuts app, tell 'Shortcuts Events' instead of
- (id) runWithInput:(id)withInput; // Run a shortcut. To run a shortcut in the
@property (readonly) NSInteger actionCount; // the number of actions in the shortcut
input data
@property (readonly) BOOL acceptsInput; // indicates whether or not the shortcut accepts
@property (copy, readonly) NSColor *color; // the shortcut's color
@property (copy) ShortcutsEventsFolder *folder; // the folder containing this shortcut
- (NSString *) id; // the unique identifier of the shortcut
@property (copy, readonly) NSString *subtitle; // the shortcut's subtitle
@property (copy, readonly) NSString *name; // the name of the shortcut

